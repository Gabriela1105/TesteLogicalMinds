// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteLogicalMinds.Contexts;

namespace TesteLogicalMinds.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20210122003535_BancoTest")]
    partial class BancoTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TesteLogicalMinds.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("Agencia")
                        .HasColumnType("int")
                        .HasColumnName("Agencia");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPF");

                    b.Property<long>("Conta")
                        .HasColumnType("bigint")
                        .HasColumnName("Conta");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataEmissao");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("E_mail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("E_mail");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("NomeProgenitor1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProgenitor1");

                    b.Property<string>("NomeProgenitor2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeProgenitor2");

                    b.Property<int>("Pix")
                        .HasColumnType("int")
                        .HasColumnName("Pix");

                    b.Property<string>("Profissao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Profissao");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RG");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("TesteLogicalMinds.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int>("CEP")
                        .HasColumnType("int")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cidade");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Complemento");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Estado");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Numero");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Pais");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("TesteLogicalMinds.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("IdCliente");

                    b.Property<string>("NomeContato")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeContato");

                    b.Property<int>("NumeroTelefone")
                        .HasColumnType("int")
                        .HasColumnName("NumeroTelefone");

                    b.Property<int>("TipoTelefone")
                        .HasColumnType("int")
                        .HasColumnName("TipoTelefone");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("TesteLogicalMinds.Models.Endereco", b =>
                {
                    b.HasOne("TesteLogicalMinds.Models.Cliente", null)
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("TesteLogicalMinds.Models.Telefone", b =>
                {
                    b.HasOne("TesteLogicalMinds.Models.Cliente", null)
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("TesteLogicalMinds.Models.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Telefones");
                });
#pragma warning restore 612, 618
        }
    }
}
